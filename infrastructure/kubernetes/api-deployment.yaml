apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-api
  namespace: mlops
  labels:
    app: mlops-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mlops-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mlops-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: api
          image: ${REGISTRY}/mlops-api:${TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: REDIS_HOST
              value: "redis.mlops.svc.cluster.local"
            - name: AWS_DEFAULT_REGION
              valueFrom:
                configMapKeyRef:
                  name: mlops-config
                  key: aws_region
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mlops-secrets
                  key: jwt_secret_key
            - name: RATE_LIMIT_ANON
              value: "30"
            - name: RATE_LIMIT_AUTH
              value: "100"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /api/v1/health/readiness
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/v1/health/liveness
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          startupProbe:
            httpGet:
              path: /api/v1/health/startup
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 30
          volumeMounts:
            - name: model-cache
              mountPath: /app/model-cache
      volumes:
        - name: model-cache
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - mlops-api
                topologyKey: kubernetes.io/hostname
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mlops-api-hpa
  namespace: mlops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mlops-api
  minReplicas: 2
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120